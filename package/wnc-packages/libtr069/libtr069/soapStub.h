/* soapStub.h
   Generated by gSOAP 2.7.9k from tr069.h
   Copyright(C) 2000-2007, Robert van Engelen, Genivia Inc. All Rights Reserved.
   This part of the software is released under one of the following licenses:
   GPL, the gSOAP public license, or Genivia's license for commercial use.
*/

#ifndef soapStub_H
#define soapStub_H
#include "stdsoap2.h"
#ifdef __cplusplus
extern "C" {
#endif

/******************************************************************************\
 *                                                                            *
 * Enumerations                                                               *
 *                                                                            *
\******************************************************************************/


#ifndef SOAP_TYPE__Enum_1
#define SOAP_TYPE__Enum_1 (10)
/* Enum-1 */
enum _Enum_1 {false_ = 0, true_ = 1};
#endif

/******************************************************************************\
 *                                                                            *
 * Classes and Structs                                                        *
 *                                                                            *
\******************************************************************************/


#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (12)
/* SOAP Header: */
struct SOAP_ENV__Header
{
#ifdef _JNR_ES_
	char *cwmp__ID;	/* mustUnderstand */
	unsigned int cwmp__NoMoreRequests;
#else
	unsigned int cwmp__ID;	/* mustUnderstand */
#endif
	enum _Enum_1 cwmp__HoldRequests;	/* mustUnderstand */
};
#endif

#ifndef SOAP_TYPE_DeviceIdStruct
#define SOAP_TYPE_DeviceIdStruct (13)
/* DeviceIdStruct */
struct DeviceIdStruct
{
	char *Manufacturer;	/* optional element of type xsd:string */
	char *OUI;	/* optional element of type xsd:string */
	char *ProductClass;	/* optional element of type xsd:string */
	char *SerialNumber;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_EventStruct
#define SOAP_TYPE_EventStruct (14)
/* EventStruct */
struct EventStruct
{
	char *EventCode;	/* optional element of type xsd:string */
	char *CommandKey;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_EventArray
#define SOAP_TYPE_EventArray (15)
/* SOAP encoded array of EventStruct schema type: */
struct EventArray
{
	struct EventStruct *__ptrEventStruct;
	int __size;
};
#endif

#ifndef SOAP_TYPE_cwmp__InformResponse
#define SOAP_TYPE_cwmp__InformResponse (17)
/* cwmp:InformResponse */
struct cwmp__InformResponse
{
	unsigned int MaxEnvelopes;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:unsignedInt */
};
#endif

#ifndef SOAP_TYPE_ParameterValueStruct
#define SOAP_TYPE_ParameterValueStruct (18)
/* ParameterValueStruct */
struct ParameterValueStruct
{
	char *Name;	/* optional element of type xsd:string */
	char *Value;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_ParameterList_Value
#define SOAP_TYPE_ParameterList_Value (19)
/* SOAP encoded array of ParameterValueStruct schema type: */
struct ParameterList_Value
{
	struct ParameterValueStruct *__ptrParameterValueStruct;
	int __size;
};
#endif

#ifndef SOAP_TYPE_ArrayOfstring
#define SOAP_TYPE_ArrayOfstring (21)
/* SOAP encoded array of xsd:string schema type: */
struct ArrayOfstring
{
	char **__ptrstring;
	int __size;
};
#endif

#ifndef SOAP_TYPE_ParameterInfoStruct
#define SOAP_TYPE_ParameterInfoStruct (23)
/* ParameterInfoStruct */
struct ParameterInfoStruct
{
	char *Name;	/* optional element of type xsd:string */
	enum _Enum_1 Writable;	/* required element of type xsd:boolean */
};
#endif

#ifndef SOAP_TYPE_ParameterList_Name
#define SOAP_TYPE_ParameterList_Name (24)
/* SOAP encoded array of ParameterInfoStruct schema type: */
struct ParameterList_Name
{
	struct ParameterInfoStruct *__ptrParameterInfoStruct;
	int __size;
};
#endif

#ifndef SOAP_TYPE_SetParameterAttributesStruct
#define SOAP_TYPE_SetParameterAttributesStruct (26)
/* SetParameterAttributesStruct */
struct SetParameterAttributesStruct
{
	char *Name;	/* optional element of type xsd:string */
	enum _Enum_1 NotificationChange;	/* required element of type xsd:boolean */
	int Notification;	/* required element of type xsd:int */
	enum _Enum_1 AccessListChange;	/* required element of type xsd:boolean */
	struct ArrayOfstring AccessList;	/* required element of type ArrayOfstring */
};
#endif

#ifndef SOAP_TYPE_ParameterList_Attributes
#define SOAP_TYPE_ParameterList_Attributes (27)
/* SOAP encoded array of SetParameterAttributesStruct schema type: */
struct ParameterList_Attributes
{
	struct SetParameterAttributesStruct *__ptrSetParameterAttributesStruct;
	int __size;
};
#endif

#ifndef SOAP_TYPE_ParameterAttributeStruct
#define SOAP_TYPE_ParameterAttributeStruct (29)
/* ParameterAttributeStruct */
struct ParameterAttributeStruct
{
	char *Name;	/* optional element of type xsd:string */
	int Notification;	/* required element of type xsd:int */
	struct ArrayOfstring AccessList;	/* required element of type ArrayOfstring */
};
#endif

#ifndef SOAP_TYPE_ParameterList_GetAttributes
#define SOAP_TYPE_ParameterList_GetAttributes (30)
/* SOAP encoded array of ParameterAttributeStruct schema type: */
struct ParameterList_GetAttributes
{
	struct ParameterAttributeStruct *__ptrParameterAttributeStruct;
	int __size;
};
#endif

#ifndef SOAP_TYPE_cwmp__DownloadResponse
#define SOAP_TYPE_cwmp__DownloadResponse (32)
/* cwmp:DownloadResponse */
struct cwmp__DownloadResponse
{
	int Status;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:int */
	char *StartTime;	/* optional element of type xsd:string */
	char *CompleteTime;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_cwmp__Fault
#define SOAP_TYPE_cwmp__Fault (33)
/* cwmp:Fault */
struct cwmp__Fault
{
	unsigned int FaultCode;	/* required element of type xsd:unsignedInt */
	char *FaultString;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_cwmp__FaultStruct
#define SOAP_TYPE_cwmp__FaultStruct (34)
/* cwmp:FaultStruct */
struct cwmp__FaultStruct
{
	unsigned int FaultCode;	/* required element of type xsd:unsignedInt */
	char *FaultString;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_cwmp__AddObjectResponse
#define SOAP_TYPE_cwmp__AddObjectResponse (35)
/* cwmp:AddObjectResponse */
struct cwmp__AddObjectResponse
{
	unsigned int InstanceNumber;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* required element of type xsd:unsignedInt */
	int Status;	/* required element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_cwmp__Inform
#define SOAP_TYPE_cwmp__Inform (41)
/* cwmp:Inform */
struct cwmp__Inform
{
	struct DeviceIdStruct *DeviceId;	/* optional element of type DeviceIdStruct */
	struct EventArray *Event;	/* optional element of type ArrayOfEventStruct */
	unsigned int MaxEnvelopes;	/* required element of type xsd:unsignedInt */
	char *CurrentTime;	/* optional element of type xsd:string */
	unsigned int RetryCount;	/* required element of type xsd:unsignedInt */
	struct ParameterList_Value *ParameterList;	/* optional element of type ArrayOfParameterValueStruct */
};
#endif

#ifndef SOAP_TYPE_cwmp__GetRPCMethodsResponse
#define SOAP_TYPE_cwmp__GetRPCMethodsResponse (46)
/* cwmp:GetRPCMethodsResponse */
struct cwmp__GetRPCMethodsResponse
{
	struct ArrayOfstring *MethodList;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ArrayOfstring */
};
#endif

#ifndef SOAP_TYPE_cwmp__GetRPCMethods
#define SOAP_TYPE_cwmp__GetRPCMethods (47)
/* cwmp:GetRPCMethods */
struct cwmp__GetRPCMethods
{
	void *_;	/* transient */
};
#endif

#ifndef SOAP_TYPE_cwmp__GetParameterNamesResponse
#define SOAP_TYPE_cwmp__GetParameterNamesResponse (50)
/* cwmp:GetParameterNamesResponse */
struct cwmp__GetParameterNamesResponse
{
	struct ParameterList_Name *ParameterList;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ArrayOfParameterInfoStruct */
};
#endif

#ifndef SOAP_TYPE_cwmp__GetParameterNames
#define SOAP_TYPE_cwmp__GetParameterNames (51)
/* cwmp:GetParameterNames */
struct cwmp__GetParameterNames
{
	char *ParameterPath;	/* optional element of type xsd:string */
	enum _Enum_1 NextLevel;	/* required element of type xsd:boolean */
};
#endif

#ifndef SOAP_TYPE_cwmp__SetParameterValuesResponse
#define SOAP_TYPE_cwmp__SetParameterValuesResponse (54)
/* cwmp:SetParameterValuesResponse */
struct cwmp__SetParameterValuesResponse
{
	unsigned int *Status;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:unsignedInt */
};
#endif

#ifndef SOAP_TYPE_cwmp__SetParameterValues
#define SOAP_TYPE_cwmp__SetParameterValues (55)
/* cwmp:SetParameterValues */
struct cwmp__SetParameterValues
{
	struct ParameterList_Value *ParameterList;	/* optional element of type ArrayOfParameterValueStruct */
	char *ParameterKey;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_cwmp__GetParameterValuesResponse
#define SOAP_TYPE_cwmp__GetParameterValuesResponse (57)
/* cwmp:GetParameterValuesResponse */
struct cwmp__GetParameterValuesResponse
{
	struct ParameterList_Value *ParameterList;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ArrayOfParameterValueStruct */
};
#endif

#ifndef SOAP_TYPE_cwmp__GetParameterValues
#define SOAP_TYPE_cwmp__GetParameterValues (58)
/* cwmp:GetParameterValues */
struct cwmp__GetParameterValues
{
	struct ArrayOfstring *ParameterNames;	/* optional element of type ArrayOfstring */
};
#endif

#ifndef SOAP_TYPE_cwmp__SetParameterAttributesResponse
#define SOAP_TYPE_cwmp__SetParameterAttributesResponse (60)
/* cwmp:SetParameterAttributesResponse */
struct cwmp__SetParameterAttributesResponse
{
#ifdef WITH_NOEMPTYSTRUCT
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#ifndef SOAP_TYPE_cwmp__SetParameterAttributes
#define SOAP_TYPE_cwmp__SetParameterAttributes (63)
/* cwmp:SetParameterAttributes */
struct cwmp__SetParameterAttributes
{
	struct ParameterList_Attributes *ParameterList;	/* optional element of type ArrayOfSetParameterAttributesStruct */
};
#endif

#ifndef SOAP_TYPE_cwmp__GetParameterAttributesResponse
#define SOAP_TYPE_cwmp__GetParameterAttributesResponse (66)
/* cwmp:GetParameterAttributesResponse */
struct cwmp__GetParameterAttributesResponse
{
	struct ParameterList_GetAttributes *ParameterList;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type ArrayOfParameterAttributeStruct */
};
#endif

#ifndef SOAP_TYPE_cwmp__GetParameterAttributes
#define SOAP_TYPE_cwmp__GetParameterAttributes (67)
/* cwmp:GetParameterAttributes */
struct cwmp__GetParameterAttributes
{
	struct ArrayOfstring *ParameterNames;	/* optional element of type ArrayOfstring */
};
#endif

#ifndef SOAP_TYPE_cwmp__Download
#define SOAP_TYPE_cwmp__Download (70)
/* cwmp:Download */
struct cwmp__Download
{
	char *CommandKey;	/* optional element of type xsd:string */
	char *FileType;	/* optional element of type xsd:string */
	char *URL;	/* optional element of type xsd:string */
	char *Username;	/* optional element of type xsd:string */
	char *Password;	/* optional element of type xsd:string */
	unsigned int FileSize;	/* required element of type xsd:unsignedInt */
	char *TargetFileName;	/* optional element of type xsd:string */
	unsigned int DelaySeconds;	/* required element of type xsd:unsignedInt */
	char *SuccessURL;	/* optional element of type xsd:string */
	char *FailureURL;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_cwmp__TransferCompleteResponse
#define SOAP_TYPE_cwmp__TransferCompleteResponse (72)
/* cwmp:TransferCompleteResponse */
struct cwmp__TransferCompleteResponse
{
#ifdef WITH_NOEMPTYSTRUCT
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#ifndef SOAP_TYPE_cwmp__TransferComplete
#define SOAP_TYPE_cwmp__TransferComplete (75)
/* cwmp:TransferComplete */
struct cwmp__TransferComplete
{
	char *CommandKey;	/* optional element of type xsd:string */
	struct cwmp__FaultStruct *FaultStruct;	/* optional element of type cwmp:FaultStruct */
	char *StartTime;	/* optional element of type xsd:string */
	char *CompleteTime;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_cwmp__AddObject
#define SOAP_TYPE_cwmp__AddObject (78)
/* cwmp:AddObject */
struct cwmp__AddObject
{
	char *ObjectName;	/* optional element of type xsd:string */
	char *ParameterKey;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_cwmp__DeleteObjectResponse
#define SOAP_TYPE_cwmp__DeleteObjectResponse (81)
/* cwmp:DeleteObjectResponse */
struct cwmp__DeleteObjectResponse
{
	int *Status;	/* SOAP 1.2 RPC return element (when namespace qualified) */	/* optional element of type xsd:int */
};
#endif

#ifndef SOAP_TYPE_cwmp__DeleteObject
#define SOAP_TYPE_cwmp__DeleteObject (82)
/* cwmp:DeleteObject */
struct cwmp__DeleteObject
{
	char *ObjectName;	/* optional element of type xsd:string */
	char *ParameterKey;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_FactoryResetResponse
#define SOAP_TYPE_FactoryResetResponse (83)
/* FactoryResetResponse */
struct FactoryResetResponse
{
#ifdef WITH_NOEMPTYSTRUCT
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#ifndef SOAP_TYPE_cwmp__FactoryReset
#define SOAP_TYPE_cwmp__FactoryReset (86)
/* cwmp:FactoryReset */
struct cwmp__FactoryReset
{
	void *_;	/* transient */
};
#endif

#ifndef SOAP_TYPE_RebootResponse
#define SOAP_TYPE_RebootResponse (87)
/* RebootResponse */
struct RebootResponse
{
#ifdef WITH_NOEMPTYSTRUCT
	char dummy;	/* dummy member to enable compilation */
#endif
};
#endif

#ifndef SOAP_TYPE_cwmp__Reboot
#define SOAP_TYPE_cwmp__Reboot (90)
/* cwmp:Reboot */
struct cwmp__Reboot
{
	char *CommandKey;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (91)
/* SOAP Fault Code: */
struct SOAP_ENV__Code
{
	char *SOAP_ENV__Value;	/* optional element of type xsd:QName */
	struct SOAP_ENV__Code *SOAP_ENV__Subcode;	/* optional element of type SOAP-ENV:Code */
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (93)
/* SOAP-ENV:Detail */
struct SOAP_ENV__Detail
{
	int __type;	/* any type of element <fault> (defined below) */
	void *fault;	/* transient */
	char *__any;
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (94)
/* SOAP-ENV:Reason */
struct SOAP_ENV__Reason
{
	char *SOAP_ENV__Text;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (95)
/* SOAP Fault: */
struct SOAP_ENV__Fault
{
	char *faultcode;	/* optional element of type xsd:QName */
	char *faultstring;	/* optional element of type xsd:string */
	char *faultactor;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *detail;	/* optional element of type SOAP-ENV:Detail */
	struct SOAP_ENV__Code *SOAP_ENV__Code;	/* optional element of type SOAP-ENV:Code */
	struct SOAP_ENV__Reason *SOAP_ENV__Reason;	/* optional element of type SOAP-ENV:Reason */
	char *SOAP_ENV__Node;	/* optional element of type xsd:string */
	char *SOAP_ENV__Role;	/* optional element of type xsd:string */
	struct SOAP_ENV__Detail *SOAP_ENV__Detail;	/* optional element of type SOAP-ENV:Detail */
};
#endif

/******************************************************************************\
 *                                                                            *
 * Types with Custom Serializers                                              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Typedefs                                                                   *
 *                                                                            *
\******************************************************************************/

#ifndef SOAP_TYPE__XML
#define SOAP_TYPE__XML (4)
typedef char *_XML;
#endif

#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
typedef char *_QName;
#endif

#ifndef SOAP_TYPE_xsd__int
#define SOAP_TYPE_xsd__int (6)
typedef int xsd__int;
#endif

#ifndef SOAP_TYPE_xsd__unsignedInt
#define SOAP_TYPE_xsd__unsignedInt (8)
typedef unsigned int xsd__unsignedInt;
#endif

#ifndef SOAP_TYPE_xsd__string
#define SOAP_TYPE_xsd__string (9)
typedef char *xsd__string;
#endif

#ifndef SOAP_TYPE_xsd__boolean
#define SOAP_TYPE_xsd__boolean (11)
typedef enum _Enum_1 xsd__boolean;
#endif


/******************************************************************************\
 *                                                                            *
 * Typedef Synonyms                                                           *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Externals                                                                  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operations                                                         *
 *                                                                            *
\******************************************************************************/


SOAP_FMAC5 int SOAP_FMAC6 cwmp__Inform(struct soap*, struct DeviceIdStruct *DeviceId, struct EventArray *Event, unsigned int MaxEnvelopes, char *CurrentTime, unsigned int RetryCount, struct ParameterList_Value *ParameterList, struct cwmp__InformResponse *result);

SOAP_FMAC5 int SOAP_FMAC6 cwmp__GetRPCMethods(struct soap*, void *_, struct ArrayOfstring *MethodList);

SOAP_FMAC5 int SOAP_FMAC6 cwmp__GetParameterNames(struct soap*, char *ParameterPath, enum _Enum_1 NextLevel, struct ParameterList_Name *ParameterList);

SOAP_FMAC5 int SOAP_FMAC6 cwmp__SetParameterValues(struct soap*, struct ParameterList_Value *ParameterList, char *ParameterKey, unsigned int *Status);

SOAP_FMAC5 int SOAP_FMAC6 cwmp__GetParameterValues(struct soap*, struct ArrayOfstring *ParameterNames, struct ParameterList_Value *ParameterList);

SOAP_FMAC5 int SOAP_FMAC6 cwmp__SetParameterAttributes(struct soap*, struct ParameterList_Attributes *ParameterList, struct cwmp__SetParameterAttributesResponse *out);

SOAP_FMAC5 int SOAP_FMAC6 cwmp__GetParameterAttributes(struct soap*, struct ArrayOfstring *ParameterNames, struct ParameterList_GetAttributes *ParameterList);

SOAP_FMAC5 int SOAP_FMAC6 cwmp__Download(struct soap*, char *CommandKey, char *FileType, char *URL, char *Username, char *Password, unsigned int FileSize, char *TargetFileName, unsigned int DelaySeconds, char *SuccessURL, char *FailureURL, struct cwmp__DownloadResponse *result);

SOAP_FMAC5 int SOAP_FMAC6 cwmp__TransferComplete(struct soap*, char *CommandKey, struct cwmp__FaultStruct *FaultStruct, char *StartTime, char *CompleteTime, struct cwmp__TransferCompleteResponse *out);

SOAP_FMAC5 int SOAP_FMAC6 cwmp__AddObject(struct soap*, char *ObjectName, char *ParameterKey, struct cwmp__AddObjectResponse *result);

SOAP_FMAC5 int SOAP_FMAC6 cwmp__DeleteObject(struct soap*, char *ObjectName, char *ParameterKey, int *Status);

SOAP_FMAC5 int SOAP_FMAC6 cwmp__FactoryReset(struct soap*, void *_, struct FactoryResetResponse *out);

SOAP_FMAC5 int SOAP_FMAC6 cwmp__Reboot(struct soap*, char *CommandKey, struct RebootResponse *out);

/******************************************************************************\
 *                                                                            *
 * Stubs                                                                      *
 *                                                                            *
\******************************************************************************/


SOAP_FMAC5 int SOAP_FMAC6 soap_call_cwmp__Inform(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct DeviceIdStruct *DeviceId, struct EventArray *Event, unsigned int MaxEnvelopes, char *CurrentTime, unsigned int RetryCount, struct ParameterList_Value *ParameterList, struct cwmp__InformResponse *result);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_cwmp__GetRPCMethods(struct soap *soap, const char *soap_endpoint, const char *soap_action, void *_, struct ArrayOfstring *MethodList);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_cwmp__GetParameterNames(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *ParameterPath, enum _Enum_1 NextLevel, struct ParameterList_Name *ParameterList);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_cwmp__SetParameterValues(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct ParameterList_Value *ParameterList, char *ParameterKey, unsigned int *Status);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_cwmp__GetParameterValues(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct ArrayOfstring *ParameterNames, struct ParameterList_Value *ParameterList);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_cwmp__SetParameterAttributes(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct ParameterList_Attributes *ParameterList, struct cwmp__SetParameterAttributesResponse *out);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_cwmp__GetParameterAttributes(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct ArrayOfstring *ParameterNames, struct ParameterList_GetAttributes *ParameterList);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_cwmp__Download(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *CommandKey, char *FileType, char *URL, char *Username, char *Password, unsigned int FileSize, char *TargetFileName, unsigned int DelaySeconds, char *SuccessURL, char *FailureURL, struct cwmp__DownloadResponse *result);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_cwmp__TransferComplete(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *CommandKey, struct cwmp__FaultStruct *FaultStruct, char *StartTime, char *CompleteTime, struct cwmp__TransferCompleteResponse *out);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_cwmp__AddObject(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *ObjectName, char *ParameterKey, struct cwmp__AddObjectResponse *result);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_cwmp__DeleteObject(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *ObjectName, char *ParameterKey, int *Status);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_cwmp__FactoryReset(struct soap *soap, const char *soap_endpoint, const char *soap_action, void *_, struct FactoryResetResponse *out);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_cwmp__Reboot(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *CommandKey, struct RebootResponse *out);

/******************************************************************************\
 *                                                                            *
 * Skeletons                                                                  *
 *                                                                            *
\******************************************************************************/

SOAP_FMAC5 int SOAP_FMAC6 soap_serve(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_request(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_cwmp__Inform(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_cwmp__GetRPCMethods(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_cwmp__GetParameterNames(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_cwmp__SetParameterValues(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_cwmp__GetParameterValues(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_cwmp__SetParameterAttributes(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_cwmp__GetParameterAttributes(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_cwmp__Download(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_cwmp__TransferComplete(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_cwmp__AddObject(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_cwmp__DeleteObject(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_cwmp__FactoryReset(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_cwmp__Reboot(struct soap*);

#ifdef _JPR_AM_
#ifndef SOAP_TYPE_UploadResponse
#define SOAP_TYPE_UploadResponse (157)
/* UploadResponse */
struct UploadResponse
{
	int Status;	/* RPC return element */	/* required element of type xsd:int */
	char *StartTime;	/* optional element of type xsd:string */
	char *CompleteTime;	/* optional element of type xsd:string */
};
#endif

#ifndef SOAP_TYPE_cwmp__Upload
#define SOAP_TYPE_cwmp__Upload (161)
/* cwmp:Upload */
struct cwmp__Upload
{
	char *CommandKey;	/* optional element of type xsd:string */
	char *FileType;	/* optional element of type xsd:string */
	char *URL;	/* optional element of type xsd:string */
	char *Username;	/* optional element of type xsd:string */
	char *Password;	/* optional element of type xsd:string */
	unsigned int DelaySeconds;	/* required element of type xsd:unsignedInt */
};
#endif

#ifndef SOAP_TYPE_cwmp__UploadResponse
#define SOAP_TYPE_cwmp__UploadResponse (158)
typedef struct UploadResponse cwmp__UploadResponse;
#endif

SOAP_FMAC5 int SOAP_FMAC6 cwmp__Upload(struct soap*, char *CommandKey, char *FileType, char *URL, char *Username, char *Password, unsigned int DelaySeconds, struct UploadResponse *response);

SOAP_FMAC5 int SOAP_FMAC6 soap_call_cwmp__Upload(struct soap *soap, const char *soap_endpoint, const char *soap_action, char *CommandKey, char *FileType, char *URL, char *Username, char *Password, unsigned int DelaySeconds, struct UploadResponse *response);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_cwmp__Upload(struct soap*);
#endif
#ifdef __cplusplus
}
#endif

#endif

/* End of soapStub.h */
