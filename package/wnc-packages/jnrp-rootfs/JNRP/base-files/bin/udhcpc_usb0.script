#!/bin/sh

if [ "_$ip" = "_" ]
then
return
fi

if [ "_$router" = "_" ]
then
return
fi

/sbin/ifconfig $interface $ip netmask $subnet up
route add default gw $router dev $interface 

echo "udhcpc write ip: $ip and dns: $dns to /tmp/dhcpc_usb0.result"
echo "ip $ip" > /tmp/dhcpc_usb0.result
echo "dns $dns" >> /tmp/dhcpc_usb0.result
echo "netmask $subnet" >> /tmp/dhcpc_usb0.result
echo "gateway $router" >> /tmp/dhcpc_usb0.result

adv_dns usb0

[ -e /usr/local/bin/ntp.sh ] && ntp.sh

#Notify VoIP
/usr/local/bin/voip_ip_chg.sh usb0 &
#Start a watchdog to check IP
/usr/local/bin/voip_ip_chk.sh usb0 &


# refresh URLIPFILTER
UrlFilterEnable=`sqlite3 -cmd ".timeout 1000" /tmp/system.db "select UrlFilterEnable from FirewallConfig;"`
if [ "$UrlFilterEnable" = "1" ]; then
	UrlFilterCnt=`sqlite3 /tmp/system.db "select count(*) from UrlFilter;"`
	if [ "$UrlFilterCnt" -ne 0 ]; then
		i=1
		iptables -F URLIPFILTER
		iptables -Z URLIPFILTER
		while [ $i -le $UrlFilterCnt ]
		do
			urlen=`sqlite3 /tmp/system.db "select Enable from UrlFilter where _ROWID_='$i'";`
			if [ "$urlen" = "1" ]; then
				url=`sqlite3 /tmp/system.db "select Url from UrlFilter where _ROWID_='$i'";`
				iptables -A URLIPFILTER -d $url -j DROP &
			fi
			i=`expr $i + 1`
		done
	fi
fi

#/usr/local/bin/lte_get --ip-status -q 0 --update-db > /dev/NULL &
