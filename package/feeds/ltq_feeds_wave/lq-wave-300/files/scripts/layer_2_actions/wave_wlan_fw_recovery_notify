#!/bin/sh

# Defines
if [ ! "$MTLK_INIT_PLATFORM" ]; then			
	. /tmp/mtlk_init_platform.sh
fi

# This script is an API between drvhlpr and scripts, not web and scripts,
# so first arg is interface name, not apIndex like in most scripts
wlan=$1
type=$2
TID=$$

echo "running wave_wlan_fw_recovery_notify (TID=$TID) with: $*"  > /dev/console

# Minimum free memory required to save dumps
minFreeMemKB=3000

#at the moment nothing to do at fw_recovery_end:
if [ "$type" != "fw_crash" ]; then return 0; fi

log_2_console()
{
	echo "wave_wlan_fw_recovery_notify: $*" > /dev/console
}

# Get free mem, including memory freeable from buffers
get_total_freemem()
{
	sync
	cat /proc/meminfo | awk 'BEGIN {total=0} { \
	if ($1 == "MemFree:") { total += $2}; if ($1 == "Buffers:") {total += $2}  } \
	END {print total}'
}

#increment numFwFails 
numFwFails=`host_api get $$ $wlan numFwFails`
let numFwFails=$numFwFails+1
host_api set $$ $wlan numFwFails $numFwFails

cd /tmp
# Source to get version information:
. /etc/wave_components.ver

#Make sure to save dump only if space available
freeMem=`cat /proc/meminfo | grep MemFree | awk '{print $2}'`
if [ $freeMem -lt $minFreeMemKB ]
then
	# Validate also after sync:
	freeMem_sync=`get_total_freemem`
	print2log DBG "memory after sync = $freeMem_sync (before=$freeMem)"
	if [ $freeMem_sync -lt $minFreeMemKB ]; then log_2_console "no memory to save dump - exit"; return; fi
fi

# Save first dumps. If already have max dumps allowed, replace previous with current dump (but never delete first dump)
dumpMax=`host_api get $$ $wlan FwRecovery | awk '{print $5}'`
numOfDumpFiles=`ls /tmp/ | grep $wave_release_minor | grep -c dump`
if [ $numOfDumpFiles -ge $dumpMax ]
then
	# Max dump files already saved, overwrite last dump if saving more than one
	if [ $dumpMax -gt 1 ]
	then
		last_file=`ls -t /tmp/${wave_release_minor}* | sed -n '1 p'`
		rm $last_file
	else
		log_2_console "over Max dump - exit"
		return
	fi
fi

dump_dir=${wave_release_minor}_`date +%Y%m%dT%H%M%S`_${wlan}_${TID}_dump
mkdir /tmp/$dump_dir
for f in shram um lm
do
	gzip -c /proc/net/mtlk/$wlan/$f  > /tmp/$dump_dir/$f.gz
done

#zip it all:
tar cf ${dump_dir}.tar $dump_dir
rm -rf /tmp/$dump_dir

time_sec=`awk  '{print $1}' < /proc/uptime`
echo  "wave_wlan_fw_recovery_notify: Done (TID=$TID); created: ${dump_dir}.tar ($time_sec)" > /dev/console

